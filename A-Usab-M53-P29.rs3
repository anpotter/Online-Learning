<rst>
  <header>
    <relations>
      <rel name="antithesis" type="rst" />
      <rel name="background" type="rst" />
      <rel name="circumstance" type="rst" />
      <rel name="concession" type="rst" />
      <rel name="condition" type="rst" />
      <rel name="elaboration" type="rst" />
      <rel name="enablement" type="rst" />
      <rel name="evaluation" type="rst" />
      <rel name="evidence" type="rst" />
      <rel name="interpretation" type="rst" />
      <rel name="justify" type="rst" />
      <rel name="means" type="rst" />
      <rel name="motivation" type="rst" />
      <rel name="nonvolitional-cause" type="rst" />
      <rel name="nonvolitional-result" type="rst" />
      <rel name="otherwise" type="rst" />
      <rel name="preparation" type="rst" />
      <rel name="purpose" type="rst" />
      <rel name="restatement" type="rst" />
      <rel name="solutionhood" type="rst" />
      <rel name="summary" type="rst" />
      <rel name="unconditional" type="rst" />
      <rel name="unless" type="rst" />
      <rel name="unstated-relation" type="rst" />
      <rel name="volitional-cause" type="rst" />
      <rel name="volitional-result" type="rst" />
      <rel name="cause" type="rst" />
      <rel name="result" type="rst" />
      <rel name="" type="rst" />
      <rel name="conjunction" type="multinuc" />
      <rel name="contrast" type="multinuc" />
      <rel name="disjunction" type="multinuc" />
      <rel name="joint" type="multinuc" />
      <rel name="list" type="multinuc" />
      <rel name="restatement-mn" type="multinuc" />
      <rel name="sequence" type="multinuc" />
    </relations>
  </header>
  <body>
    <segment id="1" parent="79" relname="span">
It is very important for a software program to be easy to use.</segment>
    <segment id="2" parent="3" relname="condition"> If it is difficult to use or understand</segment>
    <segment id="3" parent="44" relname="span"> you will not have many users at all.</segment>
    <segment id="4" parent="76" relname="preparation"> For example, Linux versus Microsoft.</segment>
    <segment id="5" parent="45" relname="contrast"> Microsoft caters to the users that really do not know too much about computers in the first place.</segment>
    <segment id="6" parent="46" relname="span"> Linux is a good system</segment>
    <segment id="7" parent="6" relname="elaboration"> and may even be considered better by some,</segment>
    <segment id="8" parent="75" relname="span"> but all in all Microsoft is easier to use. </segment>
    <segment id="9" parent="73" relname="joint">
It is easy to learn</segment>
    <segment id="10" parent="47" relname="span"> and has a Help tool</segment>
    <segment id="11" parent="10" relname="circumstance"> where you can ask (type) specific questions</segment>
    <segment id="12" parent="48" relname="disjunction"> or you can refer to FAQs on their website.</segment>
    <segment id="13" parent="14" relname="volitional-cause"> Another thing is that once you learn how to use one Microsoft Operating System</segment>
    <segment id="14" parent="67" relname="span"> you will be able to figure out the others.</segment>
    <segment id="15" parent="16" relname="condition"> For example if you have used Windows 98,</segment>
    <segment id="16" parent="68" relname="span"> you could figure out Windows XP. </segment>
    <segment id="17" parent="18" relname="condition">

If a program is not efficient,</segment>
    <segment id="18" parent="69" relname="span"> then what is the purpose of using it?</segment>
    <segment id="19" parent="70" relname="span"> The main reason for technology today is efficiency. </segment>
    <segment id="20" parent="71" relname="span">
Memorability is important</segment>
    <segment id="21" parent="49" relname="contrast"> in that you would not have to go through a tutorial every time you use the system.</segment>
    <segment id="22" parent="49" relname="contrast"> It should be simple to use EVERY TIME. </segment>
    <segment id="23" parent="80" relname="span">

Error recovery is important</segment>
    <segment id="24" parent="51" relname="span"> because when learning, or even using, a system you can make mistakes.</segment>
    <segment id="25" parent="24" relname="elaboration"> You have to be able to retrieve information that you accidentally delete, for example.</segment>
    <segment id="26" parent="27" relname="condition"> 

If a user is not satisfied with a program</segment>
    <segment id="27" parent="50" relname="span"> he/she simply will just not use it.</segment>
    <segment id="28" parent="61" relname="span"> They will just go find another program that will meet their needs.</segment>
    <segment id="29" parent="30" relname="circumstance"> This day in age with so many options</segment>
    <segment id="30" parent="62" relname="span"> that will not be hard to do.</segment>
    <segment id="57" parent="59" relname="disjunction"> 

With flexibility I believe a user should have options</segment>
    <segment id="31" parent="60" relname="span"> or they should be able to customize according to what they want and what will be easier for them to accomplish their tasks.</segment>
    <segment id="32" parent="55" relname="span"> For instance, with Windows XP you can change the interface to the way that you want it.</segment>
    <segment id="33" parent="32" relname="elaboration"> You can have pictures of your family and/or friends as a wallpaper or a screensaver.</segment>
    <segment id="34" parent="35" relname="concession"> This is not going to make using the software harder or easier,</segment>
    <segment id="35" parent="56" relname="span"> but it is a little perk that some users must have. </segment>
    <segment id="36" parent="66" relname="span">

Consistency is good with software that has a lot of versions.</segment>
    <segment id="37" parent="38" relname="condition"> If you have a program and come out with another version,</segment>
    <segment id="38" parent="65" relname="span"> it should have the same features as the first plus more.</segment>
    <segment id="39" parent="64" relname="span"> To keep customers loyal</segment>
    <segment id="40" parent="54" relname="span"> you have to stay consistent.</segment>
    <segment id="41" parent="42" relname="condition"> If they are used to getting certain features,</segment>
    <segment id="42" parent="52" relname="span"> then the next version you take it out</segment>
    <segment id="43" parent="53" relname="span"> then you are likely to lose a customer.</segment>
<group id="44" type="span" parent="78" relname="span" />
<group id="45" type="multinuc" parent="75" relname="concession" />
<group id="46" type="span" parent="45" relname="contrast" />
<group id="47" type="span" parent="48" relname="disjunction" />
<group id="48" type="multinuc" parent="73" relname="joint" />
<group id="49" type="multinuc" parent="20" relname="nonvolitional-cause" />
<group id="50" type="span" parent="28" relname="otherwise" />
<group id="51" type="span" parent="23" relname="nonvolitional-cause" />
<group id="52" type="span" parent="43" relname="condition" />
<group id="53" type="span" parent="40" relname="elaboration" />
<group id="54" type="span" parent="39" relname="means" />
<group id="55" type="span" parent="58" relname="span" />
<group id="56" type="span" parent="55" relname="evaluation" />
<group id="58" type="span" parent="31" relname="elaboration" />
<group id="59" type="multinuc" parent="82" relname="joint" />
<group id="60" type="span" parent="59" relname="disjunction" />
<group id="61" type="span" parent="81" relname="span" />
<group id="62" type="span" parent="61" relname="evaluation" />
<group id="63" type="multinuc" parent="36" relname="evidence" />
<group id="64" type="span" parent="63" relname="joint" />
<group id="65" type="span" parent="63" relname="joint" />
<group id="66" type="span" parent="82" relname="joint" />
<group id="67" type="span" parent="74" relname="span" />
<group id="68" type="span" parent="67" relname="elaboration" />
<group id="69" type="span" parent="19" relname="antithesis" />
<group id="70" type="span" parent="72" relname="span" />
<group id="71" type="span" parent="70" relname="elaboration" />
<group id="72" type="span" parent="82" relname="joint" />
<group id="73" type="multinuc" parent="8" relname="evidence" />
<group id="74" type="span" parent="73" relname="joint" />
<group id="75" type="span" parent="76" relname="span" />
<group id="76" type="span" parent="77" relname="span" />
<group id="77" type="span" parent="44" relname="elaboration" />
<group id="78" type="span" parent="82" relname="joint" />
<group id="79" type="span" />
<group id="80" type="span" parent="82" relname="joint" />
<group id="81" type="span" parent="82" relname="joint" />
<group id="82" type="multinuc" parent="1" relname="elaboration" />
  </body>
</rst>
