<rst>
  <header>
    <relations>
      <rel name="antithesis" type="rst" />
      <rel name="background" type="rst" />
      <rel name="circumstance" type="rst" />
      <rel name="concession" type="rst" />
      <rel name="condition" type="rst" />
      <rel name="elaboration" type="rst" />
      <rel name="enablement" type="rst" />
      <rel name="evaluation" type="rst" />
      <rel name="evidence" type="rst" />
      <rel name="interpretation" type="rst" />
      <rel name="justify" type="rst" />
      <rel name="means" type="rst" />
      <rel name="motivation" type="rst" />
      <rel name="nonvolitional-cause" type="rst" />
      <rel name="nonvolitional-result" type="rst" />
      <rel name="otherwise" type="rst" />
      <rel name="preparation" type="rst" />
      <rel name="purpose" type="rst" />
      <rel name="restatement" type="rst" />
      <rel name="solutionhood" type="rst" />
      <rel name="summary" type="rst" />
      <rel name="unconditional" type="rst" />
      <rel name="unless" type="rst" />
      <rel name="unstated-relation" type="rst" />
      <rel name="volitional-cause" type="rst" />
      <rel name="volitional-result" type="rst" />
      <rel name="rst" type="rst" />
      <rel name="conjunction" type="multinuc" />
      <rel name="contrast" type="multinuc" />
      <rel name="disjunction" type="multinuc" />
      <rel name="joint" type="multinuc" />
      <rel name="list" type="multinuc" />
      <rel name="restatement-mn" type="multinuc" />
      <rel name="sequence" type="multinuc" />
    </relations>
  </header>
  <body>
    <segment id="1" parent="38" relname="span">
It is very important for a software program to be easy to use.</segment>
    <segment id="2" parent="1" relname="antithesis"> If it is difficult to use or understand you will not have many users at all.</segment>
    <segment id="3" parent="42" relname="span"> For example, Linux versus Microsoft.</segment>
    <segment id="4" parent="3" relname="elaboration"> Microsoft caters to the users that really do not know too much about computers in the first place.</segment>
    <segment id="5" parent="26" relname="antithesis"> Linux is a good system and may even be considered better by some,</segment>
    <segment id="26" parent="43" relname="span"> but all in all Microsoft is easier to use.</segment>
    <segment id="6" parent="39" relname="disjunction"> 
It is easy to learn and has a Help tool where you can ask (type) specific questions</segment>
    <segment id="27" parent="39" relname="disjunction"> or you can refer to FAQs on their website.</segment>
    <segment id="7" parent="28" relname="means"> Another thing is that once you learn how to use one Microsoft Operating System</segment>
    <segment id="28" parent="40" relname="span"> you will be able to figure out the others.</segment>
    <segment id="8" parent="29" relname="condition"> For example if you have used Windows 98,</segment>
    <segment id="29" parent="41" relname="span"> you could figure out Windows XP.</segment>
    <segment id="9" parent="30" relname="condition"> 
If a program is not efficient,</segment>
    <segment id="30" parent="56" relname="span"> then what is the purpose of using it?</segment>
    <segment id="25" parent="56" relname="elaboration"> The main reason for technology today is efficiency.</segment>
    <segment id="10" parent="59" relname="span"> 
Memorability is important in that you would not have to go through a tutorial every time you use the system.</segment>
    <segment id="11" parent="10" relname="elaboration"> It should be simple to use EVERY TIME.</segment>
    <segment id="12" parent="60" relname="span"> 
Error recovery is important</segment>
    <segment id="31" parent="32" relname="circumstance"> because when learning, or even using, a system</segment>
    <segment id="32" parent="45" relname="span"> you can make mistakes.</segment>
    <segment id="13" parent="45" relname="elaboration"> You have to be able to retrieve information that you accidentally delete, for example.</segment>
    <segment id="14" parent="33" relname="condition"> 
If a user is not satisfied with a program</segment>
    <segment id="33" parent="61" relname="span"> he/she simply will just not use it.</segment>
    <segment id="15" parent="47" relname="span"> They will just go find another program that will meet their needs.</segment>
    <segment id="16" parent="15" relname="means"> This day in age with so many options that will not be hard to do.</segment>
    <segment id="17" parent="48" relname="span"> 
With flexibility I believe a user should have options</segment>
    <segment id="34" parent="17" relname="elaboration"> or they should be able to customize according to what they want and what will be easier for them to accomplish their tasks.</segment>
    <segment id="18" parent="49" relname="span"> For instance, with Windows XP you can change the interface to the way that you want it.</segment>
    <segment id="19" parent="51" relname="span"> You can have pictures of your family and/or friends as a wallpaper or a screensaver.</segment>
    <segment id="20" parent="35" relname="concession"> This is not going to make using the software harder or easier,</segment>
    <segment id="35" parent="50" relname="span"> but it is a little perk that some users must have.</segment>
    <segment id="21" parent="63" relname="span"> 
Consistency is good with software that has a lot of versions.</segment>
    <segment id="22" parent="36" relname="condition"> If you have a program and come out with another version, </segment>
    <segment id="36" parent="53" relname="span">it should have the same features as the first plus more.</segment>
    <segment id="23" parent="54" relname="span"> To keep customers loyal you have to stay consistent.</segment>
    <segment id="24" parent="37" relname="condition"> If they are used to getting certain features,</segment>
    <segment id="37" parent="52" relname="span"> then the next version you take it out then you are likely to lose a customer.</segment>
<group id="38" type="span" parent="64" relname="span" />
<group id="39" type="multinuc" parent="26" relname="elaboration" />
<group id="40" type="span" parent="44" relname="span" />
<group id="41" type="span" parent="40" relname="elaboration" />
<group id="42" type="span" parent="38" relname="elaboration" />
<group id="43" type="span" parent="3" relname="elaboration" />
<group id="44" type="span" parent="3" relname="elaboration" />
<group id="45" type="span" parent="46" relname="span" />
<group id="46" type="span" parent="12" relname="volitional-cause" />
<group id="47" type="span" parent="33" relname="volitional-result" />
<group id="48" type="span" parent="62" relname="span" />
<group id="49" type="span" parent="48" relname="elaboration" />
<group id="50" type="span" parent="19" relname="elaboration" />
<group id="51" type="span" parent="18" relname="elaboration" />
<group id="52" type="span" parent="23" relname="means" />
<group id="53" type="span" parent="55" relname="span" />
<group id="54" type="span" parent="53" relname="elaboration" />
<group id="55" type="span" parent="21" relname="elaboration" />
<group id="56" type="span" parent="58" relname="span" />
<group id="57" type="multinuc" />
<group id="58" type="span" parent="57" relname="list" />
<group id="59" type="span" parent="57" relname="list" />
<group id="60" type="span" parent="57" relname="list" />
<group id="61" type="span" parent="57" relname="list" />
<group id="62" type="span" parent="57" relname="list" />
<group id="63" type="span" parent="57" relname="list" />
<group id="64" type="span" parent="57" relname="list" />
  </body>
</rst>
