<rst>
  <header>
    <relations>
      <rel name="antithesis" type="rst" />
      <rel name="background" type="rst" />
      <rel name="circumstance" type="rst" />
      <rel name="concession" type="rst" />
      <rel name="condition" type="rst" />
      <rel name="elaboration" type="rst" />
      <rel name="enablement" type="rst" />
      <rel name="evaluation" type="rst" />
      <rel name="evidence" type="rst" />
      <rel name="interpretation" type="rst" />
      <rel name="justify" type="rst" />
      <rel name="means" type="rst" />
      <rel name="motivation" type="rst" />
      <rel name="nonvolitional-cause" type="rst" />
      <rel name="nonvolitional-result" type="rst" />
      <rel name="otherwise" type="rst" />
      <rel name="preparation" type="rst" />
      <rel name="purpose" type="rst" />
      <rel name="restatement" type="rst" />
      <rel name="solutionhood" type="rst" />
      <rel name="summary" type="rst" />
      <rel name="unconditional" type="rst" />
      <rel name="unless" type="rst" />
      <rel name="unstated-relation" type="rst" />
      <rel name="volitional-cause" type="rst" />
      <rel name="volitional-result" type="rst" />
      <rel name="rst" type="rst" />
      <rel name="" type="rst" />
      <rel name="conjunction" type="multinuc" />
      <rel name="contrast" type="multinuc" />
      <rel name="disjunction" type="multinuc" />
      <rel name="joint" type="multinuc" />
      <rel name="list" type="multinuc" />
      <rel name="restatement-mn" type="multinuc" />
      <rel name="sequence" type="multinuc" />
    </relations>
  </header>
  <body>
    <segment id="1" parent="13" relname="background"> 
Structured error handling is an example of what you are describing.</segment>
    <segment id="2" parent="11" relname="span"> Recently at work we switched over to using asp.net which includes structured error handling</segment>
    <segment id="3" parent="2" relname="volitional-result"> and it has made a world of difference.</segment>
    <segment id="4" parent="12" relname="span"> 
We can now wrap code where an error could occur, such as opening a connection to a database, in a try..catch block.</segment>
    <segment id="6" parent="8" relname="span"> 
The way a try...catch block works is like this: </segment>
    <segment id="5" parent="6" relname="elaboration">
try open connection to database catch ex as exception put code here to deal with exception end try </segment>
    <segment id="9" parent="8" relname="volitional-result">
This allows us programmers to deal with errors in the code instead of letting the user deal with them.</segment>
    <segment id="7" parent="15" relname="joint"> 
Also, __ - are you assiciated with the Air Force? </segment>
<group id="8" type="span" parent="10" relname="span" />
<group id="10" type="span" parent="4" relname="elaboration" />
<group id="11" type="span" parent="13" relname="span" />
<group id="12" type="span" parent="11" relname="evidence" />
<group id="13" type="span" parent="14" relname="span" />
<group id="14" type="span" parent="15" relname="joint" />
<group id="15" type="multinuc" />
  </body>
</rst>
