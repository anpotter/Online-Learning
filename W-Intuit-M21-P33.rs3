<rst>
  <header>
    <relations>
      <rel name="antithesis" type="rst" />
      <rel name="background" type="rst" />
      <rel name="circumstance" type="rst" />
      <rel name="concession" type="rst" />
      <rel name="condition" type="rst" />
      <rel name="elaboration" type="rst" />
      <rel name="enablement" type="rst" />
      <rel name="evaluation" type="rst" />
      <rel name="evidence" type="rst" />
      <rel name="interpretation" type="rst" />
      <rel name="justify" type="rst" />
      <rel name="means" type="rst" />
      <rel name="motivation" type="rst" />
      <rel name="nonvolitional-cause" type="rst" />
      <rel name="nonvolitional-result" type="rst" />
      <rel name="otherwise" type="rst" />
      <rel name="preparation" type="rst" />
      <rel name="purpose" type="rst" />
      <rel name="restatement" type="rst" />
      <rel name="solutionhood" type="rst" />
      <rel name="summary" type="rst" />
      <rel name="unconditional" type="rst" />
      <rel name="unless" type="rst" />
      <rel name="unstated-relation" type="rst" />
      <rel name="volitional-cause" type="rst" />
      <rel name="volitional-result" type="rst" />
      <rel name="rst" type="rst" />
      <rel name="conjunction" type="multinuc" />
      <rel name="contrast" type="multinuc" />
      <rel name="disjunction" type="multinuc" />
      <rel name="joint" type="multinuc" />
      <rel name="list" type="multinuc" />
      <rel name="restatement-mn" type="multinuc" />
      <rel name="sequence" type="multinuc" />
    </relations>
  </header>
  <body>
    <segment id="1" parent="17" relname="span">
I think intuitiveness in software should be measured based on the intended audience or 
end-users of the product.</segment>
    <segment id="2" parent="11" relname="concession"> For instance UML design tool may be very intuitive to the 
average systems analyst</segment>
    <segment id="11" parent="10" relname="span"> but it may prove to be quite difficult to learn and use, wihtout 
help, for the average user who spends most of their time typing documents and surfing 
the web.</segment>
    <segment id="3" parent="18" relname="span">  The intuitiveness of a user interface can be greatly increased or decreased 
based on how the interface is designed.</segment>
    <segment id="4" parent="15" relname="span">  In an article entitled E-Tail vs. Retail Larry 
Marine discussed some of the problems that E-Tail sites face that could potentially lead to 
failures.</segment>
    <segment id="5" parent="12" relname="span">  he argued that E-Tail sites must capture the essence of traditional stores</segment>
    <segment id="14" parent="5" relname="volitional-result"> if 
these sites should be successful.</segment>
    <segment id="6" parent="4" relname="elaboration">  He went on to say that E-Tail sites should provide 
consumers with a place to enjoy impressive service, and ease of purchasing products.</segment>
    <segment id="7" parent="8" relname="nonvolitional-cause">  
We&apos;vee all seen those sites that are cluttered with flash movies an so forth that distracts 
the consumer.</segment>
    <segment id="8" parent="13" relname="span">  These distractions can take away from a site being intuitive.</segment>
    <segment id="9" parent="15" relname="summary">  To achieve 
intuitiveness in UI designers should make use of objects that end-users can relate to.

</segment>
<group id="10" type="span" parent="1" relname="elaboration" />
<group id="12" type="span" parent="4" relname="elaboration" />
<group id="13" type="span" parent="4" relname="elaboration" />
<group id="15" type="span" parent="16" relname="span" />
<group id="16" type="span" parent="3" relname="elaboration" />
<group id="17" type="span" parent="19" relname="joint" />
<group id="18" type="span" parent="19" relname="joint" />
<group id="19" type="multinuc" />
  </body>
</rst>
