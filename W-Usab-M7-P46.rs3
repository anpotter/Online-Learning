<rst>
  <header>
    <relations>
      <rel name="antithesis" type="rst" />
      <rel name="background" type="rst" />
      <rel name="circumstance" type="rst" />
      <rel name="concession" type="rst" />
      <rel name="condition" type="rst" />
      <rel name="elaboration" type="rst" />
      <rel name="enablement" type="rst" />
      <rel name="evaluation" type="rst" />
      <rel name="evidence" type="rst" />
      <rel name="interpretation" type="rst" />
      <rel name="justify" type="rst" />
      <rel name="means" type="rst" />
      <rel name="motivation" type="rst" />
      <rel name="nonvolitional-cause" type="rst" />
      <rel name="nonvolitional-result" type="rst" />
      <rel name="otherwise" type="rst" />
      <rel name="preparation" type="rst" />
      <rel name="purpose" type="rst" />
      <rel name="restatement" type="rst" />
      <rel name="solutionhood" type="rst" />
      <rel name="summary" type="rst" />
      <rel name="unconditional" type="rst" />
      <rel name="unless" type="rst" />
      <rel name="unstated-relation" type="rst" />
      <rel name="volitional-cause" type="rst" />
      <rel name="volitional-result" type="rst" />
      <rel name="rst" type="rst" />
      <rel name="conjunction" type="multinuc" />
      <rel name="contrast" type="multinuc" />
      <rel name="disjunction" type="multinuc" />
      <rel name="joint" type="multinuc" />
      <rel name="list" type="multinuc" />
      <rel name="restatement-mn" type="multinuc" />
      <rel name="sequence" type="multinuc" />
    </relations>
  </header>
  <body>
    <segment id="1" parent="8" relname="circumstance">
When I think of the term flexibility,</segment>
    <segment id="8" parent="13" relname="span"> what comes to mind is an interface/system that 
allows the user to accomplish a task in more than one way.</segment>
    <segment id="2" parent="18" relname="span">  However, my definition is 
actually too narrow.</segment>
    <segment id="3" parent="9" relname="span"> According to Dix et al (1998), there are five design principles related 
to flexibility,</segment>
    <segment id="10" parent="14" relname="span"> two of which are &quot;substitutivity&quot; and &quot;customizability.</segment>
    <segment id="4" parent="10" relname="elaboration">&quot; An example of 
substitutivity is how paint programs, such as Microsoft Paint, allow you to define the size 
of an image in either pixels or inches.</segment>
    <segment id="5" parent="15" relname="span"> Customizability is the ability to modify the interface 
(Dix et al).</segment>
    <segment id="6" parent="12" relname="preparation"> For example, with the fixed asset software we use,</segment>
    <segment id="12" parent="16" relname="span"> you can make rename 
fields.</segment>
    <segment id="7" parent="10" relname="volitional-result"> I think that most of the Windows program I use have decent flexibility.</segment>
<group id="13" type="span" parent="2" relname="antithesis" />
<group id="14" type="span" parent="3" relname="elaboration" />
<group id="15" type="span" parent="10" relname="elaboration" />
<group id="16" type="span" parent="5" relname="elaboration" />
<group id="18" type="span" />
<group id="9" type="span" parent="2" relname="elaboration" />
  </body>
</rst>
